Training the Classifier:

Next step is to train the classifier. Our system doesn't understand images, right? It needs to be converted into Numpy array format so that it can make certain decision based on this data. This part creates classifier.xml file, which is the file that includes certain information (data) of our face.

import os
import cv2
from PIL import Image #pip install pillow
import numpy as np    # pip install numpy

def train_classifier(data_dir):
    path = [os.path.join(data_dir, f) for f in os.listdir(data_dir)]
    
    faces = []
    ids = []
    
    for image in path:
        img = Image.open(image).convert('L')
        imageNp = np.array(img, 'uint8')
        id = int(os.path.split(image)[1].split(".")[1])
        
        faces.append(imageNp)
        ids.append(id)
        
    ids = np.array(ids)
    
    # Train and save classifier
    clf = cv2.face.LBPHFaceRecognizer_create()
    clf.train(faces,ids)
    clf.write("classifier.xml")
train_classifier("data")